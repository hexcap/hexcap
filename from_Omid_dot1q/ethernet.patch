--- dpkt/ethernet.py	2013-03-05 11:55:21.000000000 -0700
+++ ethernet.py	2013-07-22 01:00:56.000000000 -0700
@@ -22,7 +22,7 @@
 ETH_TYPE_CDP	= 0x2000		# Cisco Discovery Protocol
 ETH_TYPE_DTP	= 0x2004		# Cisco Dynamic Trunking Protocol
 ETH_TYPE_REVARP	= 0x8035		# reverse addr resolution protocol
-ETH_TYPE_8021Q	= 0x8100		# IEEE 802.1Q VLAN tagging
+ETH_TYPE_IEEE8021Q = 0x8100		# IEEE 802.1Q VLAN tagging
 ETH_TYPE_IPX	= 0x8137		# Internetwork Packet Exchange
 ETH_TYPE_IP6	= 0x86DD		# IPv6 protocol
 ETH_TYPE_PPP	= 0x880B		# PPP
@@ -49,10 +49,7 @@
     _typesw = {}
     
     def _unpack_data(self, buf):
-        if self.type == ETH_TYPE_8021Q:
-            self.tag, self.type = struct.unpack('>HH', buf[:4])
-            buf = buf[4:]
-        elif self.type == ETH_TYPE_MPLS or \
+        if self.type == ETH_TYPE_MPLS or \
              self.type == ETH_TYPE_MPLS_MCAST:
             # XXX - skip labels (max # of labels is undefined, just use 24)
             self.labels = []
@@ -72,6 +69,12 @@
         except (KeyError, dpkt.UnpackError):
             self.data = buf
     
+    def pack_hdr(self):
+        if self.data.__class__.__name__ == "IEEE8021Q":
+            self.type = ETH_TYPE_IEEE8021Q
+
+        return super(Ethernet, self).pack_hdr()
+    
     def unpack(self, buf):
         dpkt.Packet.unpack(self, buf)
         if self.type > 1500:
